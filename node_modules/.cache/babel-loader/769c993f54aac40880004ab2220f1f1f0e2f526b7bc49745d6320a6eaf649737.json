{"ast":null,"code":"var _jsxFileName = \"D:\\\\Franamax India Final\\\\franmax_event-main\\\\src\\\\components\\\\CountdownTimer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import \"./CountdownTimer.css\";\n\n// const CountdownTimer = () => {\n//     // State for the countdown timer\n//     const calculateTimeLeft = () => {\n//         const targetDate = new Date(\"2025-09-13T00:00:00\");\n//         const now = new Date();\n//         const difference = targetDate - now;\n\n//         let timeLeft = {};\n//         if (difference > 0) {\n//             timeLeft = {\n//                 days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n//                 hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\n//                 seconds: Math.floor((difference / 1000) % 60),\n//             };\n//         } else {\n//             timeLeft = { expired: true };\n//         }\n//         return timeLeft;\n//     };\n\n//     const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n//     // State and Refs for drag functionality\n//     const [isDragging, setIsDragging] = useState(false);\n//     const [position, setPosition] = useState({ x: 20, y: 20 });\n//     const dragStart = useRef({ x: 0, y: 0 });\n//     const boxRef = useRef(null);\n\n//     // Effect for the countdown timer\n//     useEffect(() => {\n//         const timer = setInterval(() => {\n//             setTimeLeft(calculateTimeLeft());\n//         }, 1000);\n\n//         return () => clearInterval(timer);\n//     }, []);\n\n//     // Effect for handling drag-and-drop\n//     useEffect(() => {\n//         const handleMouseMove = (e) => {\n//             if (!isDragging) return;\n\n//             const newX = e.clientX - dragStart.current.x;\n//             const newY = e.clientY - dragStart.current.y;\n\n//             const boxWidth = boxRef.current.offsetWidth;\n//             const boxHeight = boxRef.current.offsetHeight;\n//             const viewportWidth = window.innerWidth;\n//             const viewportHeight = window.innerHeight;\n\n//             // Clamp the position to stay within the viewport\n//             const clampedX = Math.max(0, Math.min(newX, viewportWidth - boxWidth));\n//             const clampedY = Math.max(0, Math.min(newY, viewportHeight - boxHeight));\n\n//             setPosition({ x: clampedX, y: clampedY });\n//         };\n\n//         const handleMouseUp = () => {\n//             if (isDragging) {\n//                 setIsDragging(false);\n//             }\n//         };\n\n//         if (isDragging) {\n//             window.addEventListener('mousemove', handleMouseMove);\n//             window.addEventListener('mouseup', handleMouseUp);\n//         }\n\n//         // Cleanup function to remove event listeners\n//         return () => {\n//             window.removeEventListener('mousemove', handleMouseMove);\n//             window.removeEventListener('mouseup', handleMouseUp);\n//         };\n//     }, [isDragging]);\n\n//     const handleMouseDown = (e) => {\n//         setIsDragging(true);\n//         const rect = boxRef.current.getBoundingClientRect();\n//         dragStart.current = {\n//             x: e.clientX - rect.left,\n//             y: e.clientY - rect.top,\n//         };\n//         e.preventDefault(); // Prevent default browser behavior like text selection\n//     };\n\n//     // Google Calendar Link Generator\n//     const getGoogleCalendarLink = () => {\n//         const event = {\n//             title: \"Franmax Event 2025\",\n//             startDate: \"20250914T000000Z\",\n//             endDate: \"20250914T235900Z\",\n//             details: \"Join us for the exciting Franmax Event 2025!\",\n//             location: \"Taj Skyline, Ahmedabad, Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, nr. Neelkanth Green, Shilaj, Gujarat 380059\",\n//         };\n\n//         const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n//         const url = `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\n//         return url;\n//     };\n\n//     if (timeLeft.expired) {\n//         return (\n//             <div\n//                 ref={boxRef}\n//                 className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//                 style={{\n//                     left: `${position.x}px`,\n//                     top: `${position.y}px`,\n//                 }}\n//                 onMouseDown={handleMouseDown}\n//             >\n//                 <h3>Event Started!</h3>\n//                 <a\n//                     href={getGoogleCalendarLink()}\n//                     target=\"_blank\"\n//                     rel=\"noopener noreferrer\"\n//                     className=\"add-calendar-button\"\n//                 >\n//                     Add to Google Calendar\n//                 </a>\n//             </div>\n//         );\n//     }\n\n//     return (\n//         <div\n//             ref={boxRef}\n//             className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//             style={{\n//                 left: `${position.x}px`,\n//                 top: `${position.y}px`,\n//             }}\n//             onMouseDown={handleMouseDown}\n//         >\n//             <h3>Countdown to Event</h3>\n//             <div className=\"countdown-timer\">\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.days).padStart(2, '0')}</span>\n//                     <small>Days</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.hours).padStart(2, '0')}</span>\n//                     <small>Hours</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.minutes).padStart(2, '0')}</span>\n//                     <small>Minutes</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.seconds).padStart(2, '0')}</span>\n//                     <small>Seconds</small>\n//                 </div>\n//             </div>\n//             <a\n//                 href={getGoogleCalendarLink()}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//                 className=\"add-calendar-button\"\n//             >\n//                 Add to Google Calendar\n//             </a>\n//         </div>\n//     );\n// };\n\n// export default CountdownTimer;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./CountdownTimer.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  // Countdown calculation\n  const calculateTimeLeft = () => {\n    const targetDate = new Date(\"2025-09-14T10:00:00\");\n    const now = new Date();\n    const difference = targetDate - now;\n    if (difference <= 0) return {\n      expired: true\n    };\n    return {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n      minutes: Math.floor(difference / 1000 / 60 % 60),\n      seconds: Math.floor(difference / 1000 % 60)\n    };\n  };\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  // Draggable state\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({\n    x: 20,\n    y: window.innerHeight - 160\n  });\n  const dragOffset = useRef({\n    x: 0,\n    y: 0\n  });\n  const boxRef = useRef(null);\n\n  // Timer effect\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Drag functions\n  const startDrag = (clientX, clientY) => {\n    setIsDragging(true);\n    const rect = boxRef.current.getBoundingClientRect();\n    dragOffset.current = {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n  const doDrag = (clientX, clientY) => {\n    if (!isDragging) return;\n    const boxWidth = boxRef.current.offsetWidth;\n    const boxHeight = boxRef.current.offsetHeight;\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const newX = clientX - dragOffset.current.x;\n    const newY = clientY - dragOffset.current.y;\n    setPosition({\n      x: Math.max(0, Math.min(newX, viewportWidth - boxWidth)),\n      y: Math.max(0, Math.min(newY, viewportHeight - boxHeight))\n    });\n  };\n  const stopDrag = () => setIsDragging(false);\n\n  // Mouse & touch events\n  useEffect(() => {\n    const handleMouseMove = e => doDrag(e.clientX, e.clientY);\n    const handleMouseUp = stopDrag;\n    const handleTouchMove = e => {\n      const touch = e.touches[0];\n      doDrag(touch.clientX, touch.clientY);\n    };\n    const handleTouchEnd = stopDrag;\n    if (isDragging) {\n      window.addEventListener(\"mousemove\", handleMouseMove);\n      window.addEventListener(\"mouseup\", handleMouseUp);\n      window.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: false\n      });\n      window.addEventListener(\"touchend\", handleTouchEnd);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n      window.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [isDragging]);\n\n  // Google Calendar Link\n  const getGoogleCalendarLink = () => {\n    const event = {\n      title: \"Franmax Event 2025\",\n      startDate: \"20250914T000000Z\",\n      endDate: \"20250914T235900Z\",\n      details: \"Join us for the exciting Franmax Event 2025!\",\n      location: \"Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, Shilaj, Gujarat 380059\"\n    };\n    const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n    return `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: boxRef,\n    className: `countdown-wrapper ${isDragging ? \"dragging\" : \"\"}`,\n    style: {\n      position: \"fixed\",\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n      cursor: isDragging ? \"grabbing\" : \"grab\"\n    },\n    onMouseDown: e => startDrag(e.clientX, e.clientY),\n    onTouchStart: e => {\n      e.preventDefault(); // Prevent page scroll\n      const touch = e.touches[0];\n      startDrag(touch.clientX, touch.clientY);\n    },\n    onTouchMove: e => {\n      e.preventDefault(); // Prevent page scroll\n      const touch = e.touches[0];\n      doDrag(touch.clientX, touch.clientY);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-box\",\n      children: timeLeft.expired ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Event Started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: getGoogleCalendarLink(),\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"add-calendar-button\",\n          onTouchStart: e => e.stopPropagation() // Allow calendar button touch without breaking drag\n          ,\n          children: \"Add to Google Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Countdown to Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-timer\",\n          children: [\"days\", \"hours\", \"minutes\", \"seconds\"].map(unit => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-segment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: String(timeLeft[unit]).padStart(2, \"0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: unit.charAt(0).toUpperCase() + unit.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, unit, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: getGoogleCalendarLink(),\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"add-calendar-button\",\n          onTouchStart: e => e.stopPropagation() // Allow calendar button touch without breaking drag\n          ,\n          children: \"Add to Google Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"urAQ9JJB4bOhCNU+zh9JWwZ7aVI=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","CountdownTimer","_s","calculateTimeLeft","targetDate","Date","now","difference","expired","days","Math","floor","hours","minutes","seconds","timeLeft","setTimeLeft","isDragging","setIsDragging","position","setPosition","x","y","window","innerHeight","dragOffset","boxRef","timer","setInterval","clearInterval","startDrag","clientX","clientY","rect","current","getBoundingClientRect","left","top","doDrag","boxWidth","offsetWidth","boxHeight","offsetHeight","viewportWidth","innerWidth","viewportHeight","newX","newY","max","min","stopDrag","handleMouseMove","e","handleMouseUp","handleTouchMove","touch","touches","handleTouchEnd","addEventListener","passive","removeEventListener","getGoogleCalendarLink","event","title","startDate","endDate","details","location","baseUrl","encodeURIComponent","ref","className","style","cursor","onMouseDown","onTouchStart","preventDefault","onTouchMove","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","stopPropagation","map","unit","String","padStart","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["D:/Franamax India Final/franmax_event-main/src/components/CountdownTimer.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\n// import \"./CountdownTimer.css\";\n\n// const CountdownTimer = () => {\n//     // State for the countdown timer\n//     const calculateTimeLeft = () => {\n//         const targetDate = new Date(\"2025-09-13T00:00:00\");\n//         const now = new Date();\n//         const difference = targetDate - now;\n\n//         let timeLeft = {};\n//         if (difference > 0) {\n//             timeLeft = {\n//                 days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n//                 hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\n//                 seconds: Math.floor((difference / 1000) % 60),\n//             };\n//         } else {\n//             timeLeft = { expired: true };\n//         }\n//         return timeLeft;\n//     };\n\n//     const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n//     // State and Refs for drag functionality\n//     const [isDragging, setIsDragging] = useState(false);\n//     const [position, setPosition] = useState({ x: 20, y: 20 });\n//     const dragStart = useRef({ x: 0, y: 0 });\n//     const boxRef = useRef(null);\n\n//     // Effect for the countdown timer\n//     useEffect(() => {\n//         const timer = setInterval(() => {\n//             setTimeLeft(calculateTimeLeft());\n//         }, 1000);\n\n//         return () => clearInterval(timer);\n//     }, []);\n\n//     // Effect for handling drag-and-drop\n//     useEffect(() => {\n//         const handleMouseMove = (e) => {\n//             if (!isDragging) return;\n\n//             const newX = e.clientX - dragStart.current.x;\n//             const newY = e.clientY - dragStart.current.y;\n\n//             const boxWidth = boxRef.current.offsetWidth;\n//             const boxHeight = boxRef.current.offsetHeight;\n//             const viewportWidth = window.innerWidth;\n//             const viewportHeight = window.innerHeight;\n\n//             // Clamp the position to stay within the viewport\n//             const clampedX = Math.max(0, Math.min(newX, viewportWidth - boxWidth));\n//             const clampedY = Math.max(0, Math.min(newY, viewportHeight - boxHeight));\n\n//             setPosition({ x: clampedX, y: clampedY });\n//         };\n\n//         const handleMouseUp = () => {\n//             if (isDragging) {\n//                 setIsDragging(false);\n//             }\n//         };\n\n//         if (isDragging) {\n//             window.addEventListener('mousemove', handleMouseMove);\n//             window.addEventListener('mouseup', handleMouseUp);\n//         }\n\n//         // Cleanup function to remove event listeners\n//         return () => {\n//             window.removeEventListener('mousemove', handleMouseMove);\n//             window.removeEventListener('mouseup', handleMouseUp);\n//         };\n//     }, [isDragging]);\n\n//     const handleMouseDown = (e) => {\n//         setIsDragging(true);\n//         const rect = boxRef.current.getBoundingClientRect();\n//         dragStart.current = {\n//             x: e.clientX - rect.left,\n//             y: e.clientY - rect.top,\n//         };\n//         e.preventDefault(); // Prevent default browser behavior like text selection\n//     };\n\n//     // Google Calendar Link Generator\n//     const getGoogleCalendarLink = () => {\n//         const event = {\n//             title: \"Franmax Event 2025\",\n//             startDate: \"20250914T000000Z\",\n//             endDate: \"20250914T235900Z\",\n//             details: \"Join us for the exciting Franmax Event 2025!\",\n//             location: \"Taj Skyline, Ahmedabad, Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, nr. Neelkanth Green, Shilaj, Gujarat 380059\",\n//         };\n\n//         const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n//         const url = `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\n//         return url;\n//     };\n\n//     if (timeLeft.expired) {\n//         return (\n//             <div\n//                 ref={boxRef}\n//                 className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//                 style={{\n//                     left: `${position.x}px`,\n//                     top: `${position.y}px`,\n//                 }}\n//                 onMouseDown={handleMouseDown}\n//             >\n//                 <h3>Event Started!</h3>\n//                 <a\n//                     href={getGoogleCalendarLink()}\n//                     target=\"_blank\"\n//                     rel=\"noopener noreferrer\"\n//                     className=\"add-calendar-button\"\n//                 >\n//                     Add to Google Calendar\n//                 </a>\n//             </div>\n//         );\n//     }\n\n//     return (\n//         <div\n//             ref={boxRef}\n//             className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//             style={{\n//                 left: `${position.x}px`,\n//                 top: `${position.y}px`,\n//             }}\n//             onMouseDown={handleMouseDown}\n//         >\n//             <h3>Countdown to Event</h3>\n//             <div className=\"countdown-timer\">\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.days).padStart(2, '0')}</span>\n//                     <small>Days</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.hours).padStart(2, '0')}</span>\n//                     <small>Hours</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.minutes).padStart(2, '0')}</span>\n//                     <small>Minutes</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.seconds).padStart(2, '0')}</span>\n//                     <small>Seconds</small>\n//                 </div>\n//             </div>\n//             <a\n//                 href={getGoogleCalendarLink()}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//                 className=\"add-calendar-button\"\n//             >\n//                 Add to Google Calendar\n//             </a>\n//         </div>\n//     );\n// };\n\n// export default CountdownTimer;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./CountdownTimer.css\";\n\nconst CountdownTimer = () => {\n  // Countdown calculation\n  const calculateTimeLeft = () => {\n  const targetDate = new Date(\"2025-09-14T10:00:00\");\n    const now = new Date();\n    const difference = targetDate - now;\n\n    if (difference <= 0) return { expired: true };\n\n    return {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n      minutes: Math.floor((difference / 1000 / 60) % 60),\n      seconds: Math.floor((difference / 1000) % 60),\n    };\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  // Draggable state\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({\n    x: 20,\n    y: window.innerHeight - 160,\n  });\n  const dragOffset = useRef({ x: 0, y: 0 });\n  const boxRef = useRef(null);\n\n  // Timer effect\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Drag functions\n  const startDrag = (clientX, clientY) => {\n    setIsDragging(true);\n    const rect = boxRef.current.getBoundingClientRect();\n    dragOffset.current = {\n      x: clientX - rect.left,\n      y: clientY - rect.top,\n    };\n  };\n\n  const doDrag = (clientX, clientY) => {\n    if (!isDragging) return;\n    const boxWidth = boxRef.current.offsetWidth;\n    const boxHeight = boxRef.current.offsetHeight;\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    const newX = clientX - dragOffset.current.x;\n    const newY = clientY - dragOffset.current.y;\n\n    setPosition({\n      x: Math.max(0, Math.min(newX, viewportWidth - boxWidth)),\n      y: Math.max(0, Math.min(newY, viewportHeight - boxHeight)),\n    });\n  };\n\n  const stopDrag = () => setIsDragging(false);\n\n  // Mouse & touch events\n  useEffect(() => {\n    const handleMouseMove = (e) => doDrag(e.clientX, e.clientY);\n    const handleMouseUp = stopDrag;\n    const handleTouchMove = (e) => {\n      const touch = e.touches[0];\n      doDrag(touch.clientX, touch.clientY);\n    };\n    const handleTouchEnd = stopDrag;\n\n    if (isDragging) {\n      window.addEventListener(\"mousemove\", handleMouseMove);\n      window.addEventListener(\"mouseup\", handleMouseUp);\n      window.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n      window.addEventListener(\"touchend\", handleTouchEnd);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n      window.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [isDragging]);\n\n  // Google Calendar Link\n  const getGoogleCalendarLink = () => {\n    const event = {\n      title: \"Franmax Event 2025\",\n      startDate: \"20250914T000000Z\",\n      endDate: \"20250914T235900Z\",\n      details: \"Join us for the exciting Franmax Event 2025!\",\n      location:\n        \"Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, Shilaj, Gujarat 380059\",\n    };\n    const baseUrl =\n      \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n    return `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${\n      event.startDate\n    }/${event.endDate}&details=${encodeURIComponent(\n      event.details\n    )}&location=${encodeURIComponent(event.location)}`;\n  };\n\n  return (\n    <div\n      ref={boxRef}\n      className={`countdown-wrapper ${isDragging ? \"dragging\" : \"\"}`}\n      style={{\n        position: \"fixed\",\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n        cursor: isDragging ? \"grabbing\" : \"grab\",\n      }}\n      onMouseDown={(e) => startDrag(e.clientX, e.clientY)}\n      onTouchStart={(e) => {\n        e.preventDefault(); // Prevent page scroll\n        const touch = e.touches[0];\n        startDrag(touch.clientX, touch.clientY);\n      }}\n      onTouchMove={(e) => {\n        e.preventDefault(); // Prevent page scroll\n        const touch = e.touches[0];\n        doDrag(touch.clientX, touch.clientY);\n      }}\n    >\n      <div className=\"countdown-box\">\n        {timeLeft.expired ? (\n          <>\n            <h3>Event Started!</h3>\n            <a\n              href={getGoogleCalendarLink()}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"add-calendar-button\"\n              onTouchStart={(e) => e.stopPropagation()} // Allow calendar button touch without breaking drag\n            >\n              Add to Google Calendar\n            </a>\n          </>\n        ) : (\n          <>\n            <h3>Countdown to Event</h3>\n            <div className=\"countdown-timer\">\n              {[\"days\", \"hours\", \"minutes\", \"seconds\"].map((unit) => (\n                <div key={unit} className=\"time-segment\">\n                  <span>{String(timeLeft[unit]).padStart(2, \"0\")}</span>\n                  <small>{unit.charAt(0).toUpperCase() + unit.slice(1)}</small>\n                </div>\n              ))}\n            </div>\n            <a\n              href={getGoogleCalendarLink()}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"add-calendar-button\"\n              onTouchStart={(e) => e.stopPropagation()} // Allow calendar button touch without breaking drag\n            >\n              Add to Google Calendar\n            </a>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAChC,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC;IAChD,MAAMC,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAME,UAAU,GAAGH,UAAU,GAAGE,GAAG;IAEnC,IAAIC,UAAU,IAAI,CAAC,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;IAE7C,OAAO;MACLC,IAAI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}