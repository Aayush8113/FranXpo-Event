{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nisarg\\\\Desktop\\\\React_Project\\\\franxpo\\\\src\\\\components\\\\CountdownTimer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from \"react\";\n// import \"./CountdownTimer.css\";\n\n// const CountdownTimer = () => {\n//     // State for the countdown timer\n//     const calculateTimeLeft = () => {\n//         const targetDate = new Date(\"2025-09-13T00:00:00\");\n//         const now = new Date();\n//         const difference = targetDate - now;\n\n//         let timeLeft = {};\n//         if (difference > 0) {\n//             timeLeft = {\n//                 days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n//                 hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\n//                 seconds: Math.floor((difference / 1000) % 60),\n//             };\n//         } else {\n//             timeLeft = { expired: true };\n//         }\n//         return timeLeft;\n//     };\n\n//     const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n//     // State and Refs for drag functionality\n//     const [isDragging, setIsDragging] = useState(false);\n//     const [position, setPosition] = useState({ x: 20, y: 20 });\n//     const dragStart = useRef({ x: 0, y: 0 });\n//     const boxRef = useRef(null);\n\n//     // Effect for the countdown timer\n//     useEffect(() => {\n//         const timer = setInterval(() => {\n//             setTimeLeft(calculateTimeLeft());\n//         }, 1000);\n\n//         return () => clearInterval(timer);\n//     }, []);\n\n//     // Effect for handling drag-and-drop\n//     useEffect(() => {\n//         const handleMouseMove = (e) => {\n//             if (!isDragging) return;\n\n//             const newX = e.clientX - dragStart.current.x;\n//             const newY = e.clientY - dragStart.current.y;\n\n//             const boxWidth = boxRef.current.offsetWidth;\n//             const boxHeight = boxRef.current.offsetHeight;\n//             const viewportWidth = window.innerWidth;\n//             const viewportHeight = window.innerHeight;\n\n//             // Clamp the position to stay within the viewport\n//             const clampedX = Math.max(0, Math.min(newX, viewportWidth - boxWidth));\n//             const clampedY = Math.max(0, Math.min(newY, viewportHeight - boxHeight));\n\n//             setPosition({ x: clampedX, y: clampedY });\n//         };\n\n//         const handleMouseUp = () => {\n//             if (isDragging) {\n//                 setIsDragging(false);\n//             }\n//         };\n\n//         if (isDragging) {\n//             window.addEventListener('mousemove', handleMouseMove);\n//             window.addEventListener('mouseup', handleMouseUp);\n//         }\n\n//         // Cleanup function to remove event listeners\n//         return () => {\n//             window.removeEventListener('mousemove', handleMouseMove);\n//             window.removeEventListener('mouseup', handleMouseUp);\n//         };\n//     }, [isDragging]);\n\n//     const handleMouseDown = (e) => {\n//         setIsDragging(true);\n//         const rect = boxRef.current.getBoundingClientRect();\n//         dragStart.current = {\n//             x: e.clientX - rect.left,\n//             y: e.clientY - rect.top,\n//         };\n//         e.preventDefault(); // Prevent default browser behavior like text selection\n//     };\n\n//     // Google Calendar Link Generator\n//     const getGoogleCalendarLink = () => {\n//         const event = {\n//             title: \"Franmax Event 2025\",\n//             startDate: \"20250914T000000Z\",\n//             endDate: \"20250914T235900Z\",\n//             details: \"Join us for the exciting Franmax Event 2025!\",\n//             location: \"Taj Skyline, Ahmedabad, Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, nr. Neelkanth Green, Shilaj, Gujarat 380059\",\n//         };\n\n//         const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n//         const url = `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\n//         return url;\n//     };\n\n//     if (timeLeft.expired) {\n//         return (\n//             <div \n//                 ref={boxRef}\n//                 className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//                 style={{\n//                     left: `${position.x}px`,\n//                     top: `${position.y}px`,\n//                 }}\n//                 onMouseDown={handleMouseDown}\n//             >\n//                 <h3>Event Started!</h3>\n//                 <a\n//                     href={getGoogleCalendarLink()}\n//                     target=\"_blank\"\n//                     rel=\"noopener noreferrer\"\n//                     className=\"add-calendar-button\"\n//                 >\n//                     Add to Google Calendar\n//                 </a>\n//             </div>\n//         );\n//     }\n\n//     return (\n//         <div \n//             ref={boxRef}\n//             className={`countdown-box ${isDragging ? 'dragging' : ''}`}\n//             style={{\n//                 left: `${position.x}px`,\n//                 top: `${position.y}px`,\n//             }}\n//             onMouseDown={handleMouseDown}\n//         >\n//             <h3>Countdown to Event</h3>\n//             <div className=\"countdown-timer\">\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.days).padStart(2, '0')}</span>\n//                     <small>Days</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.hours).padStart(2, '0')}</span>\n//                     <small>Hours</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.minutes).padStart(2, '0')}</span>\n//                     <small>Minutes</small>\n//                 </div>\n//                 <div className=\"time-segment\">\n//                     <span>{String(timeLeft.seconds).padStart(2, '0')}</span>\n//                     <small>Seconds</small>\n//                 </div>\n//             </div>\n//             <a\n//                 href={getGoogleCalendarLink()}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//                 className=\"add-calendar-button\"\n//             >\n//                 Add to Google Calendar\n//             </a>\n//         </div>\n//     );\n// };\n\n// export default CountdownTimer;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./CountdownTimer.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  // Countdown calculation\n  const calculateTimeLeft = () => {\n    const targetDate = new Date(\"2025-09-13T00:00:00\");\n    const now = new Date();\n    const difference = targetDate - now;\n    if (difference <= 0) return {\n      expired: true\n    };\n    return {\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n      hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n      minutes: Math.floor(difference / 1000 / 60 % 60),\n      seconds: Math.floor(difference / 1000 % 60)\n    };\n  };\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  // Draggable state\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState({\n    x: 20,\n    y: window.innerHeight - 160 // place near bottom-left by default\n  });\n  const dragOffset = useRef({\n    x: 0,\n    y: 0\n  });\n  const boxRef = useRef(null);\n\n  // Timer effect\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Mouse & touch handlers\n  const startDrag = (clientX, clientY) => {\n    setIsDragging(true);\n    const rect = boxRef.current.getBoundingClientRect();\n    dragOffset.current = {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n  const doDrag = (clientX, clientY) => {\n    if (!isDragging) return;\n    const boxWidth = boxRef.current.offsetWidth;\n    const boxHeight = boxRef.current.offsetHeight;\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    const newX = clientX - dragOffset.current.x;\n    const newY = clientY - dragOffset.current.y;\n    setPosition({\n      x: Math.max(0, Math.min(newX, viewportWidth - boxWidth)),\n      y: Math.max(0, Math.min(newY, viewportHeight - boxHeight))\n    });\n  };\n  const stopDrag = () => setIsDragging(false);\n\n  // Attach mouse events\n  useEffect(() => {\n    const handleMouseMove = e => doDrag(e.clientX, e.clientY);\n    const handleMouseUp = stopDrag;\n    if (isDragging) {\n      window.addEventListener(\"mousemove\", handleMouseMove);\n      window.addEventListener(\"mouseup\", handleMouseUp);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [isDragging]);\n\n  // Attach touch events\n  useEffect(() => {\n    const handleTouchMove = e => {\n      const touch = e.touches[0];\n      doDrag(touch.clientX, touch.clientY);\n    };\n    const handleTouchEnd = stopDrag;\n    if (isDragging) {\n      window.addEventListener(\"touchmove\", handleTouchMove);\n      window.addEventListener(\"touchend\", handleTouchEnd);\n    }\n    return () => {\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n      window.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [isDragging]);\n\n  // Calendar link generator\n  const getGoogleCalendarLink = () => {\n    const event = {\n      title: \"Franmax Event 2025\",\n      startDate: \"20250914T000000Z\",\n      endDate: \"20250914T235900Z\",\n      details: \"Join us for the exciting Franmax Event 2025!\",\n      location: \"Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, Shilaj, Gujarat 380059\"\n    };\n    const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\n    return `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: boxRef,\n    className: `countdown-box ${isDragging ? \"dragging\" : \"\"}`,\n    style: {\n      position: \"fixed\",\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n      cursor: isDragging ? \"grabbing\" : \"grab\"\n    },\n    onMouseDown: e => startDrag(e.clientX, e.clientY),\n    onTouchStart: e => {\n      const touch = e.touches[0];\n      startDrag(touch.clientX, touch.clientY);\n    },\n    children: timeLeft.expired ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Event Started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: getGoogleCalendarLink(),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"add-calendar-button\",\n        children: \"Add to Google Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Countdown to Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-timer\",\n        children: [\"days\", \"hours\", \"minutes\", \"seconds\"].map(unit => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-segment\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: String(timeLeft[unit]).padStart(2, \"0\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: unit.charAt(0).toUpperCase() + unit.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, unit, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: getGoogleCalendarLink(),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"add-calendar-button\",\n        children: \"Add to Google Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"DrbXK2grm1JVl8sTATplxt3etBY=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","CountdownTimer","_s","calculateTimeLeft","targetDate","Date","now","difference","expired","days","Math","floor","hours","minutes","seconds","timeLeft","setTimeLeft","isDragging","setIsDragging","position","setPosition","x","y","window","innerHeight","dragOffset","boxRef","timer","setInterval","clearInterval","startDrag","clientX","clientY","rect","current","getBoundingClientRect","left","top","doDrag","boxWidth","offsetWidth","boxHeight","offsetHeight","viewportWidth","innerWidth","viewportHeight","newX","newY","max","min","stopDrag","handleMouseMove","e","handleMouseUp","addEventListener","removeEventListener","handleTouchMove","touch","touches","handleTouchEnd","getGoogleCalendarLink","event","title","startDate","endDate","details","location","baseUrl","encodeURIComponent","ref","className","style","cursor","onMouseDown","onTouchStart","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","map","unit","String","padStart","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/Nisarg/Desktop/React_Project/franxpo/src/components/CountdownTimer.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from \"react\";\r\n// import \"./CountdownTimer.css\";\r\n\r\n// const CountdownTimer = () => {\r\n//     // State for the countdown timer\r\n//     const calculateTimeLeft = () => {\r\n//         const targetDate = new Date(\"2025-09-13T00:00:00\");\r\n//         const now = new Date();\r\n//         const difference = targetDate - now;\r\n\r\n//         let timeLeft = {};\r\n//         if (difference > 0) {\r\n//             timeLeft = {\r\n//                 days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n//                 hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n//                 minutes: Math.floor((difference / 1000 / 60) % 60),\r\n//                 seconds: Math.floor((difference / 1000) % 60),\r\n//             };\r\n//         } else {\r\n//             timeLeft = { expired: true };\r\n//         }\r\n//         return timeLeft;\r\n//     };\r\n\r\n//     const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n//     // State and Refs for drag functionality\r\n//     const [isDragging, setIsDragging] = useState(false);\r\n//     const [position, setPosition] = useState({ x: 20, y: 20 });\r\n//     const dragStart = useRef({ x: 0, y: 0 });\r\n//     const boxRef = useRef(null);\r\n\r\n//     // Effect for the countdown timer\r\n//     useEffect(() => {\r\n//         const timer = setInterval(() => {\r\n//             setTimeLeft(calculateTimeLeft());\r\n//         }, 1000);\r\n\r\n//         return () => clearInterval(timer);\r\n//     }, []);\r\n\r\n//     // Effect for handling drag-and-drop\r\n//     useEffect(() => {\r\n//         const handleMouseMove = (e) => {\r\n//             if (!isDragging) return;\r\n\r\n//             const newX = e.clientX - dragStart.current.x;\r\n//             const newY = e.clientY - dragStart.current.y;\r\n            \r\n//             const boxWidth = boxRef.current.offsetWidth;\r\n//             const boxHeight = boxRef.current.offsetHeight;\r\n//             const viewportWidth = window.innerWidth;\r\n//             const viewportHeight = window.innerHeight;\r\n\r\n//             // Clamp the position to stay within the viewport\r\n//             const clampedX = Math.max(0, Math.min(newX, viewportWidth - boxWidth));\r\n//             const clampedY = Math.max(0, Math.min(newY, viewportHeight - boxHeight));\r\n\r\n//             setPosition({ x: clampedX, y: clampedY });\r\n//         };\r\n\r\n//         const handleMouseUp = () => {\r\n//             if (isDragging) {\r\n//                 setIsDragging(false);\r\n//             }\r\n//         };\r\n\r\n//         if (isDragging) {\r\n//             window.addEventListener('mousemove', handleMouseMove);\r\n//             window.addEventListener('mouseup', handleMouseUp);\r\n//         }\r\n\r\n//         // Cleanup function to remove event listeners\r\n//         return () => {\r\n//             window.removeEventListener('mousemove', handleMouseMove);\r\n//             window.removeEventListener('mouseup', handleMouseUp);\r\n//         };\r\n//     }, [isDragging]);\r\n\r\n//     const handleMouseDown = (e) => {\r\n//         setIsDragging(true);\r\n//         const rect = boxRef.current.getBoundingClientRect();\r\n//         dragStart.current = {\r\n//             x: e.clientX - rect.left,\r\n//             y: e.clientY - rect.top,\r\n//         };\r\n//         e.preventDefault(); // Prevent default browser behavior like text selection\r\n//     };\r\n\r\n//     // Google Calendar Link Generator\r\n//     const getGoogleCalendarLink = () => {\r\n//         const event = {\r\n//             title: \"Franmax Event 2025\",\r\n//             startDate: \"20250914T000000Z\",\r\n//             endDate: \"20250914T235900Z\",\r\n//             details: \"Join us for the exciting Franmax Event 2025!\",\r\n//             location: \"Taj Skyline, Ahmedabad, Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, nr. Neelkanth Green, Shilaj, Gujarat 380059\",\r\n//         };\r\n\r\n//         const baseUrl = \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\r\n//         const url = `${baseUrl}&text=${encodeURIComponent(event.title)}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(event.details)}&location=${encodeURIComponent(event.location)}`;\r\n//         return url;\r\n//     };\r\n\r\n//     if (timeLeft.expired) {\r\n//         return (\r\n//             <div \r\n//                 ref={boxRef}\r\n//                 className={`countdown-box ${isDragging ? 'dragging' : ''}`}\r\n//                 style={{\r\n//                     left: `${position.x}px`,\r\n//                     top: `${position.y}px`,\r\n//                 }}\r\n//                 onMouseDown={handleMouseDown}\r\n//             >\r\n//                 <h3>Event Started!</h3>\r\n//                 <a\r\n//                     href={getGoogleCalendarLink()}\r\n//                     target=\"_blank\"\r\n//                     rel=\"noopener noreferrer\"\r\n//                     className=\"add-calendar-button\"\r\n//                 >\r\n//                     Add to Google Calendar\r\n//                 </a>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     return (\r\n//         <div \r\n//             ref={boxRef}\r\n//             className={`countdown-box ${isDragging ? 'dragging' : ''}`}\r\n//             style={{\r\n//                 left: `${position.x}px`,\r\n//                 top: `${position.y}px`,\r\n//             }}\r\n//             onMouseDown={handleMouseDown}\r\n//         >\r\n//             <h3>Countdown to Event</h3>\r\n//             <div className=\"countdown-timer\">\r\n//                 <div className=\"time-segment\">\r\n//                     <span>{String(timeLeft.days).padStart(2, '0')}</span>\r\n//                     <small>Days</small>\r\n//                 </div>\r\n//                 <div className=\"time-segment\">\r\n//                     <span>{String(timeLeft.hours).padStart(2, '0')}</span>\r\n//                     <small>Hours</small>\r\n//                 </div>\r\n//                 <div className=\"time-segment\">\r\n//                     <span>{String(timeLeft.minutes).padStart(2, '0')}</span>\r\n//                     <small>Minutes</small>\r\n//                 </div>\r\n//                 <div className=\"time-segment\">\r\n//                     <span>{String(timeLeft.seconds).padStart(2, '0')}</span>\r\n//                     <small>Seconds</small>\r\n//                 </div>\r\n//             </div>\r\n//             <a\r\n//                 href={getGoogleCalendarLink()}\r\n//                 target=\"_blank\"\r\n//                 rel=\"noopener noreferrer\"\r\n//                 className=\"add-calendar-button\"\r\n//             >\r\n//                 Add to Google Calendar\r\n//             </a>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default CountdownTimer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./CountdownTimer.css\";\r\n\r\nconst CountdownTimer = () => {\r\n  // Countdown calculation\r\n  const calculateTimeLeft = () => {\r\n    const targetDate = new Date(\"2025-09-13T00:00:00\");\r\n    const now = new Date();\r\n    const difference = targetDate - now;\r\n\r\n    if (difference <= 0) return { expired: true };\r\n\r\n    return {\r\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n      minutes: Math.floor((difference / 1000 / 60) % 60),\r\n      seconds: Math.floor((difference / 1000) % 60),\r\n    };\r\n  };\r\n\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n  // Draggable state\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [position, setPosition] = useState({\r\n    x: 20,\r\n    y: window.innerHeight - 160, // place near bottom-left by default\r\n  });\r\n  const dragOffset = useRef({ x: 0, y: 0 });\r\n  const boxRef = useRef(null);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Mouse & touch handlers\r\n  const startDrag = (clientX, clientY) => {\r\n    setIsDragging(true);\r\n    const rect = boxRef.current.getBoundingClientRect();\r\n    dragOffset.current = {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  const doDrag = (clientX, clientY) => {\r\n    if (!isDragging) return;\r\n    const boxWidth = boxRef.current.offsetWidth;\r\n    const boxHeight = boxRef.current.offsetHeight;\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    const newX = clientX - dragOffset.current.x;\r\n    const newY = clientY - dragOffset.current.y;\r\n\r\n    setPosition({\r\n      x: Math.max(0, Math.min(newX, viewportWidth - boxWidth)),\r\n      y: Math.max(0, Math.min(newY, viewportHeight - boxHeight)),\r\n    });\r\n  };\r\n\r\n  const stopDrag = () => setIsDragging(false);\r\n\r\n  // Attach mouse events\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => doDrag(e.clientX, e.clientY);\r\n    const handleMouseUp = stopDrag;\r\n\r\n    if (isDragging) {\r\n      window.addEventListener(\"mousemove\", handleMouseMove);\r\n      window.addEventListener(\"mouseup\", handleMouseUp);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n  }, [isDragging]);\r\n\r\n  // Attach touch events\r\n  useEffect(() => {\r\n    const handleTouchMove = (e) => {\r\n      const touch = e.touches[0];\r\n      doDrag(touch.clientX, touch.clientY);\r\n    };\r\n    const handleTouchEnd = stopDrag;\r\n\r\n    if (isDragging) {\r\n      window.addEventListener(\"touchmove\", handleTouchMove);\r\n      window.addEventListener(\"touchend\", handleTouchEnd);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"touchmove\", handleTouchMove);\r\n      window.removeEventListener(\"touchend\", handleTouchEnd);\r\n    };\r\n  }, [isDragging]);\r\n\r\n  // Calendar link generator\r\n  const getGoogleCalendarLink = () => {\r\n    const event = {\r\n      title: \"Franmax Event 2025\",\r\n      startDate: \"20250914T000000Z\",\r\n      endDate: \"20250914T235900Z\",\r\n      details: \"Join us for the exciting Franmax Event 2025!\",\r\n      location:\r\n        \"Taj Skyline Ahmedabad, Sankalp Square III, Opp. Saket 3, Sindhubhavan Road, Shilaj, Gujarat 380059\",\r\n    };\r\n    const baseUrl =\r\n      \"https://calendar.google.com/calendar/render?action=TEMPLATE\";\r\n    return `${baseUrl}&text=${encodeURIComponent(\r\n      event.title\r\n    )}&dates=${event.startDate}/${event.endDate}&details=${encodeURIComponent(\r\n      event.details\r\n    )}&location=${encodeURIComponent(event.location)}`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={boxRef}\r\n      className={`countdown-box ${isDragging ? \"dragging\" : \"\"}`}\r\n      style={{\r\n        position: \"fixed\",\r\n        left: `${position.x}px`,\r\n        top: `${position.y}px`,\r\n        cursor: isDragging ? \"grabbing\" : \"grab\",\r\n      }}\r\n      onMouseDown={(e) => startDrag(e.clientX, e.clientY)}\r\n      onTouchStart={(e) => {\r\n        const touch = e.touches[0];\r\n        startDrag(touch.clientX, touch.clientY);\r\n      }}\r\n    >\r\n      {timeLeft.expired ? (\r\n        <>\r\n          <h3>Event Started!</h3>\r\n          <a\r\n            href={getGoogleCalendarLink()}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"add-calendar-button\"\r\n          >\r\n            Add to Google Calendar\r\n          </a>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h3>Countdown to Event</h3>\r\n          <div className=\"countdown-timer\">\r\n            {[\"days\", \"hours\", \"minutes\", \"seconds\"].map((unit) => (\r\n              <div key={unit} className=\"time-segment\">\r\n                <span>{String(timeLeft[unit]).padStart(2, \"0\")}</span>\r\n                <small>{unit.charAt(0).toUpperCase() + unit.slice(1)}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <a\r\n            href={getGoogleCalendarLink()}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"add-calendar-button\"\r\n          >\r\n            Add to Google Calendar\r\n          </a>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAYA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC;IAClD,MAAMC,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAME,UAAU,GAAGH,UAAU,GAAGE,GAAG;IAEnC,IAAIC,UAAU,IAAI,CAAC,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;IAE7C,OAAO;MACLC,IAAI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}